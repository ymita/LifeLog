@{
    ViewBag.Title = @Blog.Resources.BlogResources.Configuration;
}

<h2>@Blog.Resources.BlogResources.Configuration</h2>


<div class="container">
    <div class="row">
        <!-- Blog Sidebar Widgets Column -->
        <div class="col-sm-3">
            <!-- Blog Categories Well -->
            <div class="well">
                <h4>@Blog.Resources.BlogResources.Dashboard</h4>
                <div class="row">
                    <div class="col-lg-12">
                        <ul class="list-unstyled"></ul>
                        @Html.Partial("_DashboardPartial", null)
                    </div>
                    <!-- /.col-lg-6 -->
                </div>
                <!-- /.row -->
            </div>
        </div>
        <div class="col-sm-9">
            <section class="well">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @*<h4>Configuration</h4>*@
                        @*<hr />*@
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        
                        <div class="form-group">
                            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                Find out a way to bind Description text, and allow end users to update it.
                                @*@Html.Editor("txtValue", @Blog.Resources.BlogResources.Description, new { placeholder = "Input value" })
                                @Html.Editor("description", @Blog.Resources.BlogResources.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage(@Blog.Resources.BlogResources.Description, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 10 })
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                    @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control", type = "time" } })
                                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Update" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </section>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
