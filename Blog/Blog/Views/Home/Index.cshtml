@model IEnumerable<Blog.Models.Post>

@{
    ViewBag.Title = "Index";
}

<div class="container">
    <div class="row">

        <div class="col-sm-9" >
            @*style="background-color:transparent;"*@

            @foreach (var item in Model)
            {
            <!-- Blog Post -->
                <section class="well">
                    <h2>
                        @Html.ActionLink(@Html.DisplayFor(modelItem => item.Title).ToString(), "Details", new { id = item.ID })
                    </h2>
                    <p><span class="glyphicon glyphicon-time"></span> Posted on @Html.DisplayFor(modelItem => item.Published)</p>
                    <hr>
                    <p>@Html.Raw(item.Description.Replace(Environment.NewLine, "<br/>"))</p>
                    <a class="btn btn-raised btn-warning" href="@Url.Action("Details", "Home", new { id = item.ID })">@Blog.Resources.BlogResources.ReadMore<span class="glyphicon glyphicon-chevron-right"></span></a>
                </section>
            }

        </div>
        <!-- Blog Sidebar Widgets Column -->
        <div class="col-sm-3">
            <!-- Blog Categories Well -->
            <div class="well">
                <h4>@Blog.Resources.BlogResources.Archive</h4>
                <div class="row">
                    <div class="col-lg-6">
                        <ul class="list-unstyled">

                            @{

                                List<int> uniqueYearLabel = new List<int>();
                                Dictionary<DateTime, int> yearList = ViewData["yearList"] as Dictionary<DateTime, int>;
                                if (yearList != null)
                                {
                                    foreach (var item in yearList)
                                    {
                                        if (!uniqueYearLabel.Contains(item.Key.Year))
                                        {
                                            uniqueYearLabel.Add(item.Key.Year);
                                        }
                                    }

                                    var yearmonthlist = yearList.GroupBy(p => new { p.Key.Year, p.Key.Month });

                                    // uniquelist loop
                                    foreach (var label in uniqueYearLabel)
                                    {
                                        @Html.Raw("<li>")
                                        @Html.Raw(label)

                                        foreach (var dic in yearList)
                                        {
                                            @Html.Raw("<ul>")
                                            if (label == dic.Key.Year)
                                            {
                                                @Html.Raw("<li>")
                                                @Html.ActionLink(dic.Key.ToString("MM月"), "Date", new { id = dic.Key.ToString("yyyy-MM") })
                                                @Html.Raw(" (" + dic.Value.ToString() + ")")


                                                @Html.Raw("</li>")
                                            }
                                            @Html.Raw("</ul>")
                                        }
                                        @Html.Raw("</li>")
                                    }
                                }


                            }
                        </ul>
                    </div>
                    <!-- /.col-lg-6 -->
                </div>
                <!-- /.row -->
            </div>
            <div class="panel panel-default">
                @*<div class="panel-heading">Panel heading without title</div>*@
                @*<div class="panel-body">*@
                    @*<ul>

                        @{

                            List<int> uniqueYearLabel = new List<int>();
                            Dictionary<DateTime, int> yearList = ViewData["yearList"] as Dictionary<DateTime, int>;
                            if (yearList != null)
                            {
                                foreach (var item in yearList)
                                {
                                    if (!uniqueYearLabel.Contains(item.Key.Year))
                                    {
                                        uniqueYearLabel.Add(item.Key.Year);
                                    }
                                }

                                var yearmonthlist = yearList.GroupBy(p => new { p.Key.Year, p.Key.Month });

                                // uniquelist loop
                                foreach (var label in uniqueYearLabel)
                                {
                                    @Html.Raw("<li>")
                                    @Html.Raw(label)

                                    foreach (var dic in yearList)
                                    {
                                        @Html.Raw("<ul>")
                                        if (label == dic.Key.Year)
                                        {
                                            @Html.Raw("<li>")
                                            @Html.ActionLink(dic.Key.ToString("MM月"), "Date", new { id = dic.Key.ToString("yyyy-MM") })
                                            @Html.Raw(" (" + dic.Value.ToString() + ")")


                                            @Html.Raw("</li>")
                                        }
                                        @Html.Raw("</ul>")
                                    }
                                    @Html.Raw("</li>")
                                }
                            }


                        }
                    </ul>*@

                @*</div>*@
            </div>



        </div>
    </div>



    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li>
                <a href="?index=1" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>

            </li>

            @for (int i = 1; i <= @ViewBag.Pages; i++)
        {
        <li>
            @Html.ActionLink(i.ToString(), "Index", new { index = i })
        </li>}


            <li>
                <a href="?index=@(Html.Raw(ViewBag.Pages))" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>